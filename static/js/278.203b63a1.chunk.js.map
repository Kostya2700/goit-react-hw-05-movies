{"version":3,"file":"static/js/278.203b63a1.chunk.js","mappings":"2OAmFA,UA/Ee,WACb,OAA2BA,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,WAEpCC,EAAAA,EAAAA,YAAU,WACR,GAAmB,KAAfF,GAAoC,OAAfA,EAAzB,CACA,IAAMG,EAAiB,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBJ,GAFnB,UAGI,KADpBK,EAFgB,QAGPC,OAHO,yCAGcC,QAAQC,IAAI,qBAH1B,gCAIfhB,GAAU,SAAAiB,GAAC,cAAQJ,EAAR,KAJI,gCAMtBE,QAAQC,IAAR,MANsB,yDAAH,qDASvBL,GAVoD,CAWrD,GAAE,CAACH,IA6BJ,OACE,iCACE,kBAAMU,SAtBW,SAAAC,GAGnB,GAFAA,EAAEC,iBACFlB,EAAU,IACY,KAAlBD,EAAOoB,OAAX,CACA,IAAMC,EAAc,mCAAG,8GAEIV,EAAAA,EAAAA,IAAgBX,GAFpB,UAGK,KADlBsB,EAFa,QAGNT,OAHM,uBAIjBC,QAAQC,IAAI,MAJK,0BAOnBhB,GAAU,OAAIuB,IAPK,kDASnBR,QAAQC,IAAI,yBAAZ,MATmB,0DAAH,qDAYpBM,IACAf,EAAgB,CAAEN,OAAQA,GAdM,CAejC,EAIG,WACE,4BACE,kBACEuB,KAAK,OACLC,YAAY,gBACZC,SAlCW,SAAAP,GACnBjB,EAAUiB,EAAEQ,cAAcC,MAAMC,cAIjC,EA8BSD,MAAO3B,OAGX,mBAAQuB,KAAK,SAAb,wBAEF,+BACGzB,QADH,IACGA,OADH,EACGA,EAAO+B,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMjC,EAASkC,SAAWlC,EAASF,QAF9C,SAIG+B,GAAQC,KALJF,EASZ,QAIR,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { searchMovieName } from 'Api/api';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movie, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovies = searchParams.get('search');\n  // console.log('Movies ~ names', name);\n  useEffect(() => {\n    if (nameMovies === '' || nameMovies === null) return;\n    const asyncSearchMovies = async () => {\n      try {\n        const respMovies = await searchMovieName(nameMovies);\n        if (respMovies.length === 0) return console.log('Film not defined');\n        return setMovies(p => [...respMovies]);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    asyncSearchMovies();\n  }, [nameMovies]);\n\n  const handleSearch = e => {\n    setSearch(e.currentTarget.value.toLowerCase());\n    // const name = e.target.value;\n    // const nextParams = name !== '' ? { search } : {};\n    // setSearchParams(nextParams);\n  };\n\n  const changeSubmit = e => {\n    e.preventDefault();\n    setSearch('');\n    if (search.trim() === '') return;\n    const onSearchMovies = async () => {\n      try {\n        const response = await searchMovieName(search);\n        if (response.length === 0) {\n          console.log('no');\n          return;\n        }\n        setMovies([...response]);\n      } catch (error) {\n        console.log('onSearchMovies ~ error', error);\n      }\n    };\n    onSearchMovies();\n    setSearchParams({ search: search });\n  };\n\n  return (\n    <>\n      <form onSubmit={changeSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            placeholder=\"Search movies\"\n            onChange={handleSearch}\n            value={search}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movie?.map(({ id, name, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location.pathname + location.search }}\n              >\n                {name || title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["useState","movie","setMovies","search","setSearch","location","useLocation","useSearchParams","searchParams","setSearchParams","nameMovies","get","useEffect","asyncSearchMovies","searchMovieName","respMovies","length","console","log","p","onSubmit","e","preventDefault","trim","onSearchMovies","response","type","placeholder","onChange","currentTarget","value","toLowerCase","map","id","name","title","to","state","from","pathname"],"sourceRoot":""}