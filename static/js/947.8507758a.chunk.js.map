{"version":3,"file":"static/js/947.8507758a.chunk.js","mappings":"uKAAO,IAAMA,EAAa,SAAAC,GACxB,OAAa,OAATA,QAA0BC,IAATD,EACb,GAAN,8CAGI,kCAAN,OAAyCA,EAC1C,C,gHC2GD,UAtGqB,WACnB,OAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,QACdC,EAAW,IAEfC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GAAIU,MAAK,SAAAC,GACpBZ,EAASY,EACV,GACF,GAAE,CAACX,IAEJ,IAIiBY,EAgCjB,OACE,4BACE,0BACE,SAAC,KAAD,CAAMC,QAhCK,SAAAC,GAAM,IAAD,IACpBA,EAAEC,iBACF,IAAMC,EAAI,iBAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUe,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IACtC,OAAOd,EAASY,EACjB,EA4BK,qBAEF,iBAAKG,UAAU,WAAf,WACE,gBAAKC,KAAK1B,EAAAA,EAAAA,GAAWI,EAAMuB,aAAcC,IAAI,GAAGC,MAAM,WACtD,4BACE,wBAAKzB,EAAM0B,SACX,0BACE,sCADF,MAzCSZ,EA0CsBd,EAAM2B,aAzCpCC,OAAOd,GAAOe,MAAM,EAAG,QA2CxB,0BACE,oCADF,MACqB7B,EAAM8B,aAE3B,0BACE,kCADF,MAnDO,SAAAC,GACb,GAAkB,OAAdA,EACJ,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAWC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACjD,CAiD0BC,CAAOpC,EAAMoC,YAEhC,mBACEC,KAAK,SACLtB,QAAS,YA3CC,SAAAuB,GAClB,IAAMC,EAAaC,aAAaC,QAAQjC,GACpC+B,IACF9B,EAAWiC,KAAKC,MAAMJ,IAGN9B,EAASmC,MAAK,SAAAC,GAAK,OAAIA,EAAM3C,KAAOoC,EAAIpC,EAArB,IAG5B4C,EAAAA,GAAAA,KAAW,uBAEpBrC,EAASsC,KAAKT,GACdU,OAAOR,aAAaS,QAAQzC,EAAWkC,KAAKQ,UAAUzC,IAEvD,CA8BW0C,CAAYnD,EACb,EAJH,yBAQA,mBACEqC,KAAK,SACLtB,QAAS,YApCC,SAAAuB,GAClB,IAAMC,EAAaC,aAAaC,QAAQjC,GAElC4C,EADgBV,KAAKC,MAAMJ,GACCc,QAAO,SAAAR,GACvC,OAAOA,EAAM3C,KAAOoC,EAAIpC,EACzB,IACDsC,aAAaS,QAAQzC,EAAWkC,KAAKQ,UAAUE,GAChD,CA8BWE,CAAYtD,EACb,EAJH,iCAUJ,2BACE,yBACE,SAAC,KAAD,CAAMuD,GAAE,kBAAavD,EAAME,GAAnB,SAA8BiB,MAAOf,EAASe,MAAtD,qBAIF,yBACE,SAAC,KAAD,CAAMoC,GAAE,kBAAavD,EAAME,GAAnB,YAAiCiB,MAAOf,EAASe,MAAzD,2BAKJ,SAAC,KAAD,MAGL,C","sources":["Image/Image.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const imgPicture = path => {\n  if (path === null || path === undefined) {\n    return `${`https://via.placeholder.com/960x240`}`;\n  }\n\n  return `https://image.tmdb.org/t/p/w300${path}`;\n};\n","import { fetchMovieId } from 'Api/api';\nimport { toast } from 'react-toastify';\nimport { imgPicture } from 'Image/Image';\nimport { useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const WATCH_KEY = 'movie';\n  let arrWatch = [];\n\n  useEffect(() => {\n    fetchMovieId(id).then(resp => {\n      setMovie(resp);\n    });\n  }, [id]);\n\n  const genres = arrGenres => {\n    if (arrGenres === null) return;\n    return arrGenres?.map(genre => genre.name).join(', ');\n  };\n  const useScore = value => {\n    return String(value).slice(0, 3);\n  };\n  const onGoBack = e => {\n    e.preventDefault();\n    const back = location?.state?.from ?? '/';\n    return navigate(back);\n  };\n\n  const saveToLocal = obj => {\n    const checkWatch = localStorage.getItem(WATCH_KEY);\n    if (checkWatch) {\n      arrWatch = JSON.parse(checkWatch);\n    }\n\n    const filmWatch = arrWatch.find(array => array.id === obj.id);\n\n    if (filmWatch) {\n      return toast.warn('You save this film');\n    }\n    arrWatch.push(obj);\n    window.localStorage.setItem(WATCH_KEY, JSON.stringify(arrWatch));\n    return arrWatch;\n  };\n  const deleteLocal = obj => {\n    const checkWatch = localStorage.getItem(WATCH_KEY);\n    const deleteStorage = JSON.parse(checkWatch);\n    const filmWatched = deleteStorage.filter(array => {\n      return array.id !== obj.id;\n    });\n    localStorage.setItem(WATCH_KEY, JSON.stringify(filmWatched));\n  };\n  return (\n    <div>\n      <div>\n        <Link onClick={onGoBack}>Back</Link>\n      </div>\n      <div className=\"imgmovie\">\n        <img src={imgPicture(movie.poster_path)} alt=\"\" width=\"300px\" />\n        <div>\n          <h2>{movie.title}</h2>\n          <p>\n            <b>Use score </b>: {useScore(movie.vote_average)}\n          </p>\n          <p>\n            <b>Overview</b> : {movie.overview}\n          </p>\n          <p>\n            <b>Genres</b> : {genres(movie.genres)}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              saveToLocal(movie);\n            }}\n          >\n            Save Films\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              deleteLocal(movie);\n            }}\n          >\n            Delete Films\n          </button>\n        </div>\n      </div>\n      <ul>\n        <li>\n          <Link to={`/movies/${movie.id}/cast`} state={location.state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movie.id}/reviews`} state={location.state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["imgPicture","path","undefined","useState","movie","setMovie","id","useParams","location","useLocation","navigate","useNavigate","WATCH_KEY","arrWatch","useEffect","fetchMovieId","then","resp","value","onClick","e","preventDefault","back","state","from","className","src","poster_path","alt","width","title","vote_average","String","slice","overview","arrGenres","map","genre","name","join","genres","type","obj","checkWatch","localStorage","getItem","JSON","parse","find","array","toast","push","window","setItem","stringify","saveToLocal","filmWatched","filter","deleteLocal","to"],"sourceRoot":""}