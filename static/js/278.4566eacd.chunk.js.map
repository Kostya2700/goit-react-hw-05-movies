{"version":3,"file":"static/js/278.4566eacd.chunk.js","mappings":"uQAqGA,UA/Fe,WACb,OAA2BA,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,WAEpCC,EAAAA,EAAAA,YAAU,WACR,GAAmB,KAAfF,GAAoC,OAAfA,EAAzB,CACA,IAAMG,EAAiB,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBJ,GAFnB,UAGI,KADpBK,EAFgB,QAGPC,OAHO,0EAIfhB,GAAU,SAAAiB,GAAC,cAAQF,EAAR,KAJI,gCAMtBG,QAAQC,IAAR,MANsB,yDAAH,qDASvBN,GAVoD,CAWrD,GAAE,CAACH,IAkCJ,OACE,iCACE,kBAAMU,SA3BW,SAAAC,GAInB,GAHAA,EAAEC,iBACFpB,EAAU,IACVF,EAAU,IACY,KAAlBC,EAAOsB,OACT,OAAOC,EAAAA,GAAAA,KAAW,mCACpB,IAAMC,EAAc,mCAAG,oGAEnBrB,GAAU,GAFS,UAGIU,EAAAA,EAAAA,IAAgBb,GAHpB,UAIK,KADlByB,EAHa,QAINV,OAJM,uBAKjBQ,EAAAA,GAAAA,KAAW,wBALM,0BAQnBxB,GAAU,OAAI0B,IARK,kDAUnBR,QAAQC,IAAI,yBAAZ,MAVmB,yBAYnBf,GAAU,GAZS,6EAAH,qDAepBqB,IACAhB,EAAgB,CAAER,OAAQA,GAC3B,EAIG,WACE,4BACE,kBACE0B,KAAK,OACLC,YAAY,gBACZC,SAvCW,SAAAR,GACnBnB,EAAUmB,EAAES,cAAcC,MAAMC,cAIjC,EAmCSD,MAAO9B,OAGX,mBAAQ0B,KAAK,SAAb,wBAEF,+BACG5B,QADH,IACGA,OADH,EACGA,EAAOkC,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMlC,EAASmC,SAAWnC,EAASJ,QAF9C,SAIGkC,GAAQC,KALJF,EASZ,MAEF/B,IACC,SAAC,KAAD,CACEsC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,qBAKtB,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { searchMovieName } from 'Api/api';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Blocks } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [movie, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loader, setLoader] = useState(false);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovies = searchParams.get('search');\n  // console.log('Movies ~ names', name);\n  useEffect(() => {\n    if (nameMovies === '' || nameMovies === null) return;\n    const asyncSearchMovies = async () => {\n      try {\n        const respMovies = await searchMovieName(nameMovies);\n        if (respMovies.length === 0) return;\n        return setMovies(p => [...respMovies]);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    asyncSearchMovies();\n  }, [nameMovies]);\n\n  const handleSearch = e => {\n    setSearch(e.currentTarget.value.toLowerCase());\n    // const name = e.target.value;\n    // const nextParams = name !== '' ? { search } : {};\n    // setSearchParams(nextParams);\n  };\n\n  const changeSubmit = e => {\n    e.preventDefault();\n    setSearch('');\n    setMovies([]);\n    if (search.trim() === '')\n      return toast.warn('Please write correct movie name');\n    const onSearchMovies = async () => {\n      try {\n        setLoader(true);\n        const response = await searchMovieName(search);\n        if (response.length === 0) {\n          toast.warn('This movie not found');\n          return;\n        }\n        setMovies([...response]);\n      } catch (error) {\n        console.log('onSearchMovies ~ error', error);\n      } finally {\n        setLoader(false);\n      }\n    };\n    onSearchMovies();\n    setSearchParams({ search: search });\n  };\n\n  return (\n    <>\n      <form onSubmit={changeSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            placeholder=\"Search movies\"\n            onChange={handleSearch}\n            value={search}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movie?.map(({ id, name, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location.pathname + location.search }}\n              >\n                {name || title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      {loader && (\n        <Blocks\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n        />\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["useState","movie","setMovies","search","setSearch","loader","setLoader","location","useLocation","useSearchParams","searchParams","setSearchParams","nameMovies","get","useEffect","asyncSearchMovies","searchMovieName","respMovies","length","p","console","log","onSubmit","e","preventDefault","trim","toast","onSearchMovies","response","type","placeholder","onChange","currentTarget","value","toLowerCase","map","id","name","title","to","state","from","pathname","visible","height","width","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}